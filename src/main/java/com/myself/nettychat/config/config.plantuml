@startuml

title __CONFIG's Class Diagram__\n

  package com.myself.nettychat {
    package com.myself.nettychat.config {
      class NettyConfig {
          + bossGroup()
          + workerGroup()
          + tcpPost()
          + tcpChannelOptions()
          + bootstrap()
      }
    }
  }
  

  package com.myself.nettychat {
    package com.myself.nettychat.config {
      class NettyTcpChannelInitializer {
          + initChannel()
      }
    }
  }
  

  interface Sharable {
  }
  

  package com.myself.nettychat {
    package com.myself.nettychat.config {
      class NettyTcpConfig {
          + bossGroup()
          + workerGroup()
          + tcpPost()
          + tcpChannelOptions()
          + bootstrap()
      }
    }
  }
  

  package com.myself.nettychat {
    package com.myself.nettychat.config {
      class NettyWebSocketChannelInitializer {
          + initChannel()
      }
    }
  }
  

  interface Sharable {
  }
  

  package com.myself.nettychat {
    package com.myself.nettychat.config {
      class TCPServer {
          - serverBootstrap : ServerBootstrap
          - tcpServerBootstrap : ServerBootstrap
          - webPort : InetSocketAddress
          - tcpTcpPort : InetSocketAddress
          - serverChannel : Channel
          - tcpServerChannel : Channel
          + startWeb()
          + startTcp()
          + stop()
      }
    }
  }
  

  package com.myself.nettychat {
    package com.myself.nettychat.config {
      class TCPServerHandler {
          {static} ~ channels : ChannelGroup
          + channelRead()
          - futureBYTesting()
          - futureByChlientResult()
          - futureByException()
          - futureByCharge()
          - futureByLoLa()
          - futureByController()
          - futureByPStates()
          - getUpdateKey()
          + exceptionCaught()
          + channelActive()
          + channelInactive()
      }
    }
  }
  

  interface Sharable {
  }
  

  package com.myself.nettychat {
    package com.myself.nettychat.config {
      class TextWebSocketFrameHandler {
          {static} + channels : ChannelGroup
          # channelRead0()
          - handleWebSocketFrame()
          - textWebSocketFrame()
          + handlerAdded()
          + handlerRemoved()
          + channelActive()
          + channelInactive()
          + exceptionCaught()
      }
    }
  }
  

  interface Sharable {
  }
  

  NettyConfig o-- InitNetty : nettyAccountConfig
  NettyConfig o-- NettyWebSocketChannelInitializer : nettyWebSocketChannelInitializer
  NettyTcpChannelInitializer -up-|> ChannelInitializer
  NettyTcpChannelInitializer o-- TCPServerHandler : tcpServerHandler
  NettyTcpChannelInitializer +-down- Sharable
  NettyTcpConfig o-- InitNetty : nettyAccountConfig
  NettyTcpConfig o-- NettyTcpChannelInitializer : nettyTcpChannelInitializer
  NettyWebSocketChannelInitializer -up-|> ChannelInitializer
  NettyWebSocketChannelInitializer o-- TextWebSocketFrameHandler : textWebSocketFrameHandler
  NettyWebSocketChannelInitializer +-down- Sharable
  TCPServerHandler -up-|> ChannelInboundHandlerAdapter
  TCPServerHandler +-down- Sharable
  TextWebSocketFrameHandler -up-|> SimpleChannelInboundHandler
  TextWebSocketFrameHandler o-- LikeRedisTemplate : redisTemplate
  TextWebSocketFrameHandler o-- LikeSomeCacheTemplate : cacheTemplate
  TextWebSocketFrameHandler o-- MsgAsyncTesk : msgAsyncTesk
  TextWebSocketFrameHandler +-down- Sharable


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
